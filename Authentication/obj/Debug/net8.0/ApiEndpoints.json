[
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "ChangeRole",
    "RelativePath": "api/Auth/ChangeRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Authentication.Models.DTOs.ChangeRoleModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "GetUserRoles",
    "RelativePath": "api/Auth/GetUserwithRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequestDto",
        "Type": "Authentication.Models.DTOs.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequestDto",
        "Type": "Authentication.Models.DTOs.RegisterUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "RemoveAllUsers",
    "RelativePath": "api/Auth/RemoveAllUsers",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.AuthController",
    "Method": "GetUsers",
    "RelativePath": "api/Auth/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Authentication.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Authentication.WeatherForecast, Authentication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]